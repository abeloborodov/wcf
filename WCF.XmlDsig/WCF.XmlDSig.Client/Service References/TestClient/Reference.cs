//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.XmlDSig.Client.TestClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestClient.ITestService")]
    public interface ITestService {
        
        // CODEGEN: Generating message contract since the operation SendRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SendRequest", ReplyAction="http://tempuri.org/ITestService/SendRequestResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WCF.XmlDSig.Client.TestClient.SendRequestResponse SendRequest(WCF.XmlDSig.Client.TestClient.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/SendRequest", ReplyAction="http://tempuri.org/ITestService/SendRequestResponse")]
        System.Threading.Tasks.Task<WCF.XmlDSig.Client.TestClient.SendRequestResponse> SendRequestAsync(WCF.XmlDSig.Client.TestClient.Request request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1")]
    public partial class SenderProvidedRequestData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PrimaryContent primaryContentField;
        
        private BusinessProcessMetadata businessProcessMetadataField;
        
        private System.Xml.XmlElement personalSignatureField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.1", Order=0)]
        public PrimaryContent PrimaryContent {
            get {
                return this.primaryContentField;
            }
            set {
                this.primaryContentField = value;
                this.RaisePropertyChanged("PrimaryContent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public BusinessProcessMetadata BusinessProcessMetadata {
            get {
                return this.businessProcessMetadataField;
            }
            set {
                this.businessProcessMetadataField = value;
                this.RaisePropertyChanged("BusinessProcessMetadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Xml.XmlElement PersonalSignature {
            get {
                return this.personalSignatureField;
            }
            set {
                this.personalSignatureField = value;
                this.RaisePropertyChanged("PersonalSignature");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.1")]
    public partial class PrimaryContent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string significantDataField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SignificantData {
            get {
                return this.significantDataField;
            }
            set {
                this.significantDataField = value;
                this.RaisePropertyChanged("SignificantData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1")]
    public partial class BusinessProcessMetadata : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceCodeField;
        
        private string caseNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ServiceCode {
            get {
                return this.serviceCodeField;
            }
            set {
                this.serviceCodeField = value;
                this.RaisePropertyChanged("ServiceCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CaseNumber {
            get {
                return this.caseNumberField;
            }
            set {
                this.caseNumberField = value;
                this.RaisePropertyChanged("CaseNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Request", WrapperNamespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", IsWrapped=true)]
    public partial class Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", Order=0)]
        public WCF.XmlDSig.Client.TestClient.SenderProvidedRequestData SenderProvidedRequestData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", Order=1)]
        public System.Xml.XmlElement DepartmentSignature;
        
        public Request() {
        }
        
        public Request(WCF.XmlDSig.Client.TestClient.SenderProvidedRequestData SenderProvidedRequestData, System.Xml.XmlElement DepartmentSignature) {
            this.SenderProvidedRequestData = SenderProvidedRequestData;
            this.DepartmentSignature = DepartmentSignature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendRequestResponse {
        
        public SendRequestResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceChannel : WCF.XmlDSig.Client.TestClient.ITestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceClient : System.ServiceModel.ClientBase<WCF.XmlDSig.Client.TestClient.ITestService>, WCF.XmlDSig.Client.TestClient.ITestService {
        
        public TestServiceClient() {
        }
        
        public TestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCF.XmlDSig.Client.TestClient.SendRequestResponse WCF.XmlDSig.Client.TestClient.ITestService.SendRequest(WCF.XmlDSig.Client.TestClient.Request request) {
            return base.Channel.SendRequest(request);
        }
        
        public void SendRequest(WCF.XmlDSig.Client.TestClient.SenderProvidedRequestData SenderProvidedRequestData, System.Xml.XmlElement DepartmentSignature) {
            WCF.XmlDSig.Client.TestClient.Request inValue = new WCF.XmlDSig.Client.TestClient.Request();
            inValue.SenderProvidedRequestData = SenderProvidedRequestData;
            inValue.DepartmentSignature = DepartmentSignature;
            WCF.XmlDSig.Client.TestClient.SendRequestResponse retVal = ((WCF.XmlDSig.Client.TestClient.ITestService)(this)).SendRequest(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCF.XmlDSig.Client.TestClient.SendRequestResponse> WCF.XmlDSig.Client.TestClient.ITestService.SendRequestAsync(WCF.XmlDSig.Client.TestClient.Request request) {
            return base.Channel.SendRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCF.XmlDSig.Client.TestClient.SendRequestResponse> SendRequestAsync(WCF.XmlDSig.Client.TestClient.SenderProvidedRequestData SenderProvidedRequestData, System.Xml.XmlElement DepartmentSignature) {
            WCF.XmlDSig.Client.TestClient.Request inValue = new WCF.XmlDSig.Client.TestClient.Request();
            inValue.SenderProvidedRequestData = SenderProvidedRequestData;
            inValue.DepartmentSignature = DepartmentSignature;
            return ((WCF.XmlDSig.Client.TestClient.ITestService)(this)).SendRequestAsync(inValue);
        }
    }
}
